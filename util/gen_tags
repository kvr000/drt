#!/bin/sh

##
## drt library
##
## drt multiplatform development toolkit
##
## ----------------------------------------------------------------------------------
##
## Copyright (C) 2004-2008 Zbyněk Vyškovský
##
## ----------------------------------------------------------------------------------
##
## LICENSE:
##
## This file is part of drt
##
## drt is free software; you can redistribute it and/or modify it under the
## terms of the GNU Lesser General Public License as published by the Free
## Software Foundation; either version 3 of the License, or (at your option)
## any later version.
##
## drt is distributed in the hope that it will be useful, but WITHOUT ANY
## WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
## FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
## more details.
##
## You should have received a copy of the GNU Lesser General Public License
## along with drt; if not, write to the Free Software Foundation, Inc., 51
## Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
##
## @author	2004-2008 Zbyněk Vyškovský
## @link	mailto:kvr@matfyz.cz
## @link	http://kvr.matfyz.cz/drt/
## @license	http://www.gnu.org/licenses/lgpl.txt GNU Lesser General Public License v3
##

set -e

if test -n "$CTAGS"; then
	$CTAGS -o ctags.tags "$@"
elif which exuberant-ctags >/dev/null 2>&1; then
	exuberant-ctags --exclude=doc --c++-kinds=+p --fields=+iaS --extra=+q -o ctags.tags -R "$@"
elif which ctags-exuberant >/dev/null 2>&1; then
	ctags-exuberant --exclude=doc --c++-kinds=+p --fields=+iaS --extra=+q -o ctags.tags -R "$@"
else
	ctags -o ctags.tags -R "$@"
fi
for env in `env | grep ^LC_ | cut -d = -f 1`; do unset $env; done
perl -e '
use strict;
use warnings;
use File::Find;
use FileHandle;
use Data::Dumper;
no locale;
my $main_fd = FileHandle->new(shift @ARGV, "<") or die "failed to open main file: $!";
my @files = ( { prefix => "", fd => $main_fd } );
@ARGV = ( "." ) unless (@ARGV);
find({ no_chdir => 1, wanted => sub {
	if (m/(\.\/)?(.*\/|)_build\/_gen\/.*\.tags$/) {
		if (my $fd = FileHandle->new($_, "<")) {
			push(@files, { prefix => $2, fd => $fd });
		}
		else {
			STDERR->printf("Failed to open %s: %s\n", $_, $!);
		}
	}
} }, @ARGV);
for (;;) {
	my $best;
	foreach my $ft (@files) {
		next if (!defined $ft->{pending} && !defined ($ft->{pending} = $ft->{fd}->getline()));
		$best = $ft if (!defined $best || $ft->{pending} lt $best->{pending});
	}
	last unless ($best);
	$best->{pending} = "$1\t$best->{prefix}$2$3" if ($best->{pending} =~ m/^([^\t]*)\t([^\t]*)(\t.*)$/s);
	STDOUT->printf("%s", $best->{pending});
	undef $best->{pending};
}
' ctags.tags "$@" > tags && rm ctags.tags
